// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TapRoomApi.Helpers;

namespace TapRoomApi.Migrations
{
    [DbContext(typeof(TapRoomContext))]
    partial class TapRoomContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TapRoomApi.Entities.Beer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("AlcoholContent")
                        .HasColumnType("double");

                    b.Property<string>("Aroma")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Brand")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Color")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Flavor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Pints")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("beer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlcoholContent = 5.5999999999999996,
                            Aroma = "Citrus, apple, Biscuit",
                            Brand = "Fremont",
                            Color = "Golden Caramel",
                            Flavor = "Pine, orange, bready",
                            Name = "Universale",
                            Pints = 124,
                            Price = 5.0
                        },
                        new
                        {
                            Id = 2,
                            AlcoholContent = 6.2000000000000002,
                            Aroma = "Orange, dank, juicy",
                            Brand = "Fremont",
                            Color = "Yellow amber",
                            Flavor = "Grapefruit, pine, honey",
                            Name = "Interurban",
                            Pints = 20,
                            Price = 5.0
                        },
                        new
                        {
                            Id = 3,
                            AlcoholContent = 7.4000000000000004,
                            Aroma = "Apple",
                            Brand = "Rileys",
                            Color = "Golden Caramel",
                            Flavor = "Pine, apple",
                            Name = "Round Trip",
                            Pints = 124,
                            Price = 9.0
                        },
                        new
                        {
                            Id = 4,
                            AlcoholContent = 5.5999999999999996,
                            Aroma = "Citrus, apple, Biscuit",
                            Brand = "Fremont",
                            Color = "Golden Caramel",
                            Flavor = "Pine, orange, bready",
                            Name = "Universale",
                            Pints = 124,
                            Price = 5.0
                        },
                        new
                        {
                            Id = 5,
                            AlcoholContent = 10.0,
                            Aroma = "Citrus, apple, Biscuit",
                            Brand = "Andy's",
                            Color = "Golden Brown",
                            Flavor = "Pine, orange, bready",
                            Name = "The Good Stuff",
                            Pints = 124,
                            Price = 12.0
                        });
                });

            modelBuilder.Entity("TapRoomApi.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BeerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeerId");

                    b.ToTable("review");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BeerId = 4,
                            Description = "Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.",
                            Rating = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 2,
                            BeerId = 3,
                            Description = "At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores.",
                            Rating = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            BeerId = 5,
                            Description = "Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.",
                            Rating = 4,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("TapRoomApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("Role")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            PasswordHash = new byte[] { 105, 98, 250, 217, 156, 81, 161, 85, 121, 56, 184, 45, 142, 8, 67, 93, 155, 116, 233, 87, 75, 107, 173, 118, 181, 52, 151, 220, 216, 127, 79, 36, 108, 29, 223, 177, 184, 45, 220, 222, 134, 65, 77, 95, 228, 98, 223, 58, 74, 218, 169, 182, 217, 55, 213, 10, 121, 238, 74, 185, 89, 19, 130, 226 },
                            PasswordSalt = new byte[] { 185, 53, 176, 0, 87, 206, 130, 140, 255, 198, 61, 98, 235, 11, 206, 136, 254, 65, 58, 203, 41, 234, 118, 157, 84, 87, 211, 45, 232, 238, 2, 230, 193, 10, 98, 247, 215, 79, 91, 229, 199, 48, 135, 183, 231, 181, 96, 100, 67, 217, 55, 166, 245, 55, 22, 6, 202, 221, 106, 83, 140, 11, 185, 122, 142, 155, 45, 183, 45, 141, 157, 199, 248, 77, 160, 116, 16, 99, 194, 240, 66, 60, 161, 59, 115, 232, 190, 65, 169, 249, 103, 11, 48, 8, 242, 65, 62, 109, 53, 158, 72, 240, 27, 30, 70, 60, 46, 71, 116, 166, 1, 190, 216, 49, 226, 0, 252, 60, 170, 152, 155, 29, 77, 87, 118, 0, 206, 144 },
                            Role = "Admin",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "employeeserone@gmail.com",
                            FirstName = "Employee",
                            LastName = "One",
                            PasswordHash = new byte[] { 105, 98, 250, 217, 156, 81, 161, 85, 121, 56, 184, 45, 142, 8, 67, 93, 155, 116, 233, 87, 75, 107, 173, 118, 181, 52, 151, 220, 216, 127, 79, 36, 108, 29, 223, 177, 184, 45, 220, 222, 134, 65, 77, 95, 228, 98, 223, 58, 74, 218, 169, 182, 217, 55, 213, 10, 121, 238, 74, 185, 89, 19, 130, 226 },
                            PasswordSalt = new byte[] { 185, 53, 176, 0, 87, 206, 130, 140, 255, 198, 61, 98, 235, 11, 206, 136, 254, 65, 58, 203, 41, 234, 118, 157, 84, 87, 211, 45, 232, 238, 2, 230, 193, 10, 98, 247, 215, 79, 91, 229, 199, 48, 135, 183, 231, 181, 96, 100, 67, 217, 55, 166, 245, 55, 22, 6, 202, 221, 106, 83, 140, 11, 185, 122, 142, 155, 45, 183, 45, 141, 157, 199, 248, 77, 160, 116, 16, 99, 194, 240, 66, 60, 161, 59, 115, 232, 190, 65, 169, 249, 103, 11, 48, 8, 242, 65, 62, 109, 53, 158, 72, 240, 27, 30, 70, 60, 46, 71, 116, 166, 1, 190, 216, 49, 226, 0, 252, 60, 170, 152, 155, 29, 77, 87, 118, 0, 206, 144 },
                            Role = "Employee",
                            UserName = "EmployeeUserOne"
                        },
                        new
                        {
                            Id = 3,
                            Email = "employeeusertwo@gmail.com",
                            FirstName = "Employee",
                            LastName = "Two",
                            PasswordHash = new byte[] { 105, 98, 250, 217, 156, 81, 161, 85, 121, 56, 184, 45, 142, 8, 67, 93, 155, 116, 233, 87, 75, 107, 173, 118, 181, 52, 151, 220, 216, 127, 79, 36, 108, 29, 223, 177, 184, 45, 220, 222, 134, 65, 77, 95, 228, 98, 223, 58, 74, 218, 169, 182, 217, 55, 213, 10, 121, 238, 74, 185, 89, 19, 130, 226 },
                            PasswordSalt = new byte[] { 185, 53, 176, 0, 87, 206, 130, 140, 255, 198, 61, 98, 235, 11, 206, 136, 254, 65, 58, 203, 41, 234, 118, 157, 84, 87, 211, 45, 232, 238, 2, 230, 193, 10, 98, 247, 215, 79, 91, 229, 199, 48, 135, 183, 231, 181, 96, 100, 67, 217, 55, 166, 245, 55, 22, 6, 202, 221, 106, 83, 140, 11, 185, 122, 142, 155, 45, 183, 45, 141, 157, 199, 248, 77, 160, 116, 16, 99, 194, 240, 66, 60, 161, 59, 115, 232, 190, 65, 169, 249, 103, 11, 48, 8, 242, 65, 62, 109, 53, 158, 72, 240, 27, 30, 70, 60, 46, 71, 116, 166, 1, 190, 216, 49, 226, 0, 252, 60, 170, 152, 155, 29, 77, 87, 118, 0, 206, 144 },
                            Role = "Employee",
                            UserName = "EmployeeUserTwo"
                        },
                        new
                        {
                            Id = 4,
                            Email = "employeeusertwo@gmail.com",
                            FirstName = "Employee",
                            LastName = "Two",
                            PasswordHash = new byte[] { 105, 98, 250, 217, 156, 81, 161, 85, 121, 56, 184, 45, 142, 8, 67, 93, 155, 116, 233, 87, 75, 107, 173, 118, 181, 52, 151, 220, 216, 127, 79, 36, 108, 29, 223, 177, 184, 45, 220, 222, 134, 65, 77, 95, 228, 98, 223, 58, 74, 218, 169, 182, 217, 55, 213, 10, 121, 238, 74, 185, 89, 19, 130, 226 },
                            PasswordSalt = new byte[] { 185, 53, 176, 0, 87, 206, 130, 140, 255, 198, 61, 98, 235, 11, 206, 136, 254, 65, 58, 203, 41, 234, 118, 157, 84, 87, 211, 45, 232, 238, 2, 230, 193, 10, 98, 247, 215, 79, 91, 229, 199, 48, 135, 183, 231, 181, 96, 100, 67, 217, 55, 166, 245, 55, 22, 6, 202, 221, 106, 83, 140, 11, 185, 122, 142, 155, 45, 183, 45, 141, 157, 199, 248, 77, 160, 116, 16, 99, 194, 240, 66, 60, 161, 59, 115, 232, 190, 65, 169, 249, 103, 11, 48, 8, 242, 65, 62, 109, 53, 158, 72, 240, 27, 30, 70, 60, 46, 71, 116, 166, 1, 190, 216, 49, 226, 0, 252, 60, 170, 152, 155, 29, 77, 87, 118, 0, 206, 144 },
                            UserName = "EmployeeUserTwo"
                        },
                        new
                        {
                            Id = 5,
                            Email = "employeeusertwo@gmail.com",
                            FirstName = "Employee",
                            LastName = "Two",
                            PasswordHash = new byte[] { 105, 98, 250, 217, 156, 81, 161, 85, 121, 56, 184, 45, 142, 8, 67, 93, 155, 116, 233, 87, 75, 107, 173, 118, 181, 52, 151, 220, 216, 127, 79, 36, 108, 29, 223, 177, 184, 45, 220, 222, 134, 65, 77, 95, 228, 98, 223, 58, 74, 218, 169, 182, 217, 55, 213, 10, 121, 238, 74, 185, 89, 19, 130, 226 },
                            PasswordSalt = new byte[] { 185, 53, 176, 0, 87, 206, 130, 140, 255, 198, 61, 98, 235, 11, 206, 136, 254, 65, 58, 203, 41, 234, 118, 157, 84, 87, 211, 45, 232, 238, 2, 230, 193, 10, 98, 247, 215, 79, 91, 229, 199, 48, 135, 183, 231, 181, 96, 100, 67, 217, 55, 166, 245, 55, 22, 6, 202, 221, 106, 83, 140, 11, 185, 122, 142, 155, 45, 183, 45, 141, 157, 199, 248, 77, 160, 116, 16, 99, 194, 240, 66, 60, 161, 59, 115, 232, 190, 65, 169, 249, 103, 11, 48, 8, 242, 65, 62, 109, 53, 158, 72, 240, 27, 30, 70, 60, 46, 71, 116, 166, 1, 190, 216, 49, 226, 0, 252, 60, 170, 152, 155, 29, 77, 87, 118, 0, 206, 144 },
                            UserName = "EmployeeUserTwo"
                        });
                });

            modelBuilder.Entity("TapRoomApi.Entities.Review", b =>
                {
                    b.HasOne("TapRoomApi.Entities.Beer", null)
                        .WithMany("Reviews")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
